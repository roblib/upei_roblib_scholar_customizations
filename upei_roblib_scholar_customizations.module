<?php

/**
 * @file
 * Implementation of robertson library scholar customizations.
 */

/**
 * Implements hook_menu().
 */
function upei_roblib_scholar_customizations_menu() {
  return array(
    'islandora/object/%islandora_object/manage/overview/roblib_romeo' => array(
      'title' => 'Add or Update the ROMEO datastream',
      'page callback' => '_upei_roblib_scholar_customizations_add_romeo',
      'page arguments' => array(2),
      'type' => MENU_LOCAL_ACTION,
      'file' => 'includes/romeo.inc',
      'access callback' => 'upei_roblib_scholar_customizations_romeo_access',
      'access arguments' => array(2),
    ),
    'upei/roblib/autocomplete/%' => array(
      'title' => 'u1 callback',
      'page callback' => 'upei_roblib_scholar_customizations_u1_callback',
      'page arguments' => array(3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/utilities.inc',
      'access arguments' => array('search islandora solr'),
    )
  );
}

/**
 * If this is a citationCModel object and has an issn show the update romeo link.
 *
 * @param \AbstractObject $object
 * @return bool
 */
function upei_roblib_scholar_customizations_romeo_access(AbstractObject $object) {
  $models = $object->models;
  if (!in_array('ir:citationCModel', $models)) {
    return FALSE;
  }
  if (empty($object['MODS'])) {
    // we can't get an issn from the mods
    return FALSE;
  }
  $mods_doc = @DOMDocument::loadXML($object['MODS']->content);
  if (empty($mods_doc)) {
    // couldn't parse the mods
    return FALSE;
  }
  $mods_xpath = new DOMXPath($mods_doc);
  $mods_xpath->registerNamespace('mods', 'http://www.loc.gov/mods/v3');
  $xpath_results = $mods_xpath->query('//mods:identifier[@type="issn" and normalize-space(text())]');
  if ($xpath_results->length > 0) {
    // take the first issn
    $issn = $xpath_results->item(0)->textContent;
  }
  if (empty($issn)) {
    return FALSE;
  }
  return TRUE;
}


/**
 * Implements hook_islandora_object_ingested
 */
function upei_roblib_scholar_customizations_islandora_object_ingested($object) {
  module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/xacml');
  module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/romeo');
  upei_roblib_scholar_customizations_add_xacml($object);
  _upei_roblib_scholar_customizations_add_romeo($object, FALSE);
}

/**
 * Implements hook_islandora_datastream_ingested
 */
function upei_roblib_scholar_customizations_islandora_datastream_ingested($object, $datastream) {
  if ($datastream->id === 'PDF') {
    module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/utilities');
    module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/romeo');
    upei_roblib_scholar_customizations_update_pdf_label($object);
    _upei_roblib_scholar_customizations_add_romeo($object, FALSE);
  }
}

/**
 * Implements hook_preprocess().
 *
 * We want to add the mads identifier[@type=u1] and affilation/organization values to the variables array when viewing a personCModel object.
 */
function upei_roblib_scholar_customizations_preprocess_islandora_person(array &$variables) {
  $object = empty($variables['object']) ? NULL : $variables['object'];
  $u2 = $u1 = '';
  if (empty($object)) {
    return;
  }
  module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/utilities');
  try {
    $u1 = upei_roblib_scholar_customizations_get_u1($object, 'MADS');
    $u2 = upei_roblib_scholar_customizations_get_u2($object);
  }
  catch (Exception $e) {
    watchdog_exception('UPEI Scholar Customizations', $e, 'Error retrieving u identifier from MADS datastream.', array(), WATCHDOG_ERROR);
  }
  $variables['u1'] = $u1;
  $variables['u2'] = $u2;
  // remove research classifications from research interests
  if ($object['MADS']) {
    $mads = $object['MADS']->content;
    $simplexml = simplexml_load_string($mads);

    $activities = $simplexml->fieldOfActivity;
    foreach ($activities as $activity) {
      $ccv = isset($activity['authority']) ? reset($activity['authority']) : ' ';
      if ($ccv !== 'ccv_aor') {
        if ((string) $activity) {
          $fields_of_activity[] = (string) $activity;
        }
      }
    }
    if (isset($fields_of_activity)) {
      $list_variables = [
        'items' => $fields_of_activity,
        'title' => t('Research Interests'),
        'type' => 'ul',
        'attributes' => ['class' => 'research_interests'],
      ];
      $variables['activities'] = theme_item_list($list_variables);
    }
  }
}

/**
 * Implements hook_islandora_datastream_modified
 */
function upei_roblib_scholar_customizations_islandora_datastream_modified
(AbstractObject $object, AbstractDatastream $datastream) {
  if ($datastream->id === 'MODS' || $datastream->id === 'MADS') {
    module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/xacml');
    upei_roblib_scholar_customizations_add_xacml($object);
  }
}

/**
 * Implements hook_islandora_object_modified
 */
function upei_roblib_scholar_customizations_islandora_object_modified(AbstractObject $object) {
  module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/xacml');
  // seem to need to get a fresh copy of the object here (we were getting the old owner id if we don't work on a reloaded object).
  $object = new IslandoraFedoraObject($object->id, $object->repository);
  upei_roblib_scholar_customizations_add_xacml($object);
}

/**
 * Validate CCV research interests.
 * @param $form
 * @param $form_state
 */
function upei_roblib_scholar_customizations_validate_ccv_ri($element, $form_state) {
  /*
  if we have existing noncorfming data we will have to uncomment the below code so we can remove the bad data using the form.
  if (empty($form_state['submitted'])) {
     We are not submitting the form yet (it's possible someone just removed a tag or something and we don't want to validate yet).
    return;
  }  */
  if (empty($element['#value'])) {
    // we are not checking if this field is required.  if it has a value we validate it
    // against the taxonomy vocabulary.
    return;
  }
  // hardcoded the fieldname as it is not always included in with the element
  // for instance when using the tag element type and have multiple tags.
  $field_name = 'field_ccv_area_of_research';
  $field = field_info_field($field_name);
  $allowed = taxonomy_allowed_values($field);
  if (!in_array($element['#value'], $allowed)) {
    form_error($element, t('Invalid value %value in the %title tag list.', array('%title' => $element['#title'],
      '%value' => $element['#value'])));
  }
}

/**
 * Validate Faculty Identifiers.
 * @param $form
 * @param $form_state
 */
function upei_roblib_scholar_customizations_validate_u1($form, $form_state) {
  module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/utilities');
  _upei_roblib_scholar_customizations_fb_validate($form, $form_state,
    'u1_identifier_tabs', 'islandora\:personCModel', SOLR_MADS_FACULTY_IDENTIFIER_STRING);
}

/**
 * Validate Department identifiers.
 * @param $form
 * @param $form_state
 */
function upei_roblib_scholar_customizations_validate_u2($form, $form_state) {
  module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/utilities');
  $field_name = 'u2_identifier_tabs';
  $form_values = $form_state['values'];
  $form_element = empty($form_values[$field_name]) ? NULL : $form_values[$field_name];
  $cmodel = 'islandora\:organizationCModel';
  if (empty($form_element)) {
    $form_element = empty($form_values['affiliation']['organization_tabs']) ? NULL : $form_values['affiliation']['organization_tabs'];
    $field_name = 'affiliation';
  }
  if (empty($form_element)) {
    $field_name = 'u2_identifier_tab';
    $form_element = empty($form_values[$field_name]) ? NULL : $form_values[$field_name];
  }
  if (empty($form_element)) {
    $field_name = 'u2-identifier-tabs';
    $form_element = empty($form_values[$field_name]) ? array() : $form_values[$field_name];
  }

  _upei_roblib_scholar_customizations_fb_validate($form, $form_state,
    $field_name, $cmodel, SOLAR_MADS_DEPARTMENT_STRING, $form_element);
}


function upei_roblib_scholar_customizations_form_islandora_scholar_upload_form_alter(&$form, $form_state, $form_id) {
  $usage = array(
    'Contact Author' => 'Contact Author (I hold the copyright and wish to retain all rights)',
    'Contact Publisher' => 'Contact Publisher (I do not hold the copyright)',
    'CC-BY' => '<a rel="license" title="Creative Commons Attribution" 
   href="http://creativecommons.org/licenses/by/3.0/">
  <img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by/3.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution 3.0 Unported License" 
   href="http://creativecommons.org/licenses/by/3.0/">Creative Commons
   Attribution </a>',

    'CC-BY-SA' => '<a rel="license" title="Creative Commons Attribution-ShareAlike"
   href="http://creativecommons.org/licenses/by-sa/3.0/">
  <img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-sa/3.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution-ShareAlike" 
   href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-ShareAlike License</a>',

    'CC-BY-NC' => '<a rel="license" title="Creative Commons Attribution-NonCommercial" 
   href="http://creativecommons.org/licenses/by-nc/3.0/">
  <img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc/3.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution-NonCommercial 3.0 Unported License" 
   href="http://creativecommons.org/licenses/by-nc/3.0/">Creative Commons
   Attribution-NonCommercial License</a>',

    'CC-BY-NC-SA' => '<a rel="license" title="Creative Commons Attribution-NonCommercial-ShareAlike " 
   href="http://creativecommons.org/licenses/by-nc-sa/3.0/">
  <img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License" 
   href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons Attribution-NonCommercial-ShareAlike License</a>',

    'CC-BY-ND' => '<a rel="license" title="Creative Commons Attribution-NoDerivatives"
   href="http://creativecommons.org/licenses/by-nd/3.0/">
  <img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nd/3.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution-NoDerivatives" 
   href="http://creativecommons.org/licenses/by-nd/3.0/">Creative Commons Attribution-NoDerivatives License</a>',

    'CC-BY-NC-ND' => '<a rel="license" title="Creative Commons Attribution-NonCommercial-NoDerivatives" 
   href="http://creativecommons.org/licenses/by-nc-nd/3.0/">
  <img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-nd/3.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution-NonCommercial-NoDerivatives 3.0 Unported License" 
   href="http://creativecommons.org/licenses/by-nc-nd/3.0/">Creative Commons Attribution-NonCommercial-NoDerivatives License</a>',

    'CC0' => '<a rel="license" title="Creative Commons - No Rights Reserved"
   href="https://creativecommons.org/about/cc0/">
  <img alt="Creative Commons License" style="border-width:0" src="https://licensebuttons.net/p/zero/1.0/80x15.png" />
  </a> This work is licensed under a <a rel="license" 
   title="Creative Commons Attribution-NoDerivatives" 
   href="https://creativecommons.org/about/cc0/">Creative Commons - No Rights Reserved</a>',

    'Public Domain' => 'Public Domain',
  );
  $form['upload_document']['usage']['#options'] = $usage;
  $versions = array(
    'PRE-PRINT' => 'Pre-print - The version of the document you submitted to the publisher prior to peer-review.',
    'POST-PRINT' => 'Post-print - The version of the document after it has been peer-reviewed, but before it has gone to typesetting.',
    'PUBLISHED' => 'Published PDF - The published version of the document.',
    'OTHER' => 'Other/Unpublished - A document that has not been published or is otherwise considered unpublished.',
  );
  $form['upload_document']['version']['#options'] = $versions;
  // Call our submit handler not scholars We are using different attributes for usage etc.
  $form['#submit'] = array('upei_roblib_scholar_customizations_scholar_upload_form_submit');

  return $form;
}

/**
 * Upload form Submit handler, adds PDF datastream.
 *
 * Also updates the MODS usage and version for the PDF datastream.
 *
 * We override the scholars version of this function so we can use our own usage and version attributes.
 *
 * @param array $form
 *   The Drupal form definition.
 * @param array $form_state
 *   The Drupal form state.
 */
function upei_roblib_scholar_customizations_scholar_upload_form_submit(array $form, array &$form_state) {
  extract($form_state['values']);

  $object = islandora_object_load($pid);

  try {
    $datastream = $object->constructDatastream($dsid, 'M');
    $datastream->label = 'PDF Datastream';
    $datastream->mimetype = 'application/pdf';
    $file = file_load($file);
    $path = drupal_realpath($file->uri);
    $datastream->setContentFromFile($path);

    $object->ingestDatastream($datastream);
    module_load_include('inc', 'upei_roblib_scholar_customizations', 'includes/upload.tab');
    upei_roblib_scholar_customizations_add_usage_and_version_elements_to_mods($object, $usage, $version);
  }
  catch (Exception $e) {
    drupal_set_message(t('@message', array('@message' => check_plain($e->getMessage()))), 'error');
  }
}


